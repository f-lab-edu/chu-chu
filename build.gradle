plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
//    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//configurations {
//    asciidoctorExtensions
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenCentral()
}

//ext {
//    snippetsDir = file('build/generated-snippets')
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.projectlombok:lombok:1.18.24'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation "com.querydsl:querydsl-apt:5.0.0"
//    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter'
}

tasks.named('test') {
    useJUnitPlatform()
}

/*
 * restDoc 설정 추가
 */
//test {
//    outputs.dir snippetsDir
//    useJUnitPlatform()
//}
//
//asciidoctor {
//    configurations 'asciidoctorExtensions'
//    inputs.dir snippetsDir
//    dependsOn test
//}
//
//bootJar {
//    dependsOn asciidoctor
//    finalizedBy 'copyDocument'
//}
//
//task copyDocument(type: Copy) {
//    dependsOn bootJar
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}
//
//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}